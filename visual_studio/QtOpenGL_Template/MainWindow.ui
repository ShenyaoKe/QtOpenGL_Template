<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindowClass</class>
 <widget class="QMainWindow" name="MainWindowClass">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>691</width>
    <height>528</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QMainWindow
{
	color: #BFBFBF;
	background-color: #444444;
}
QWidget
{
	color: #BFBFBF;
	background-color: #444444;
}
QWidget:item:hover
{
    background-color: #5285A6;
    color: #FFFFFF;
}
/*------------------------MenuBar Menu----------------------------------------*/
QMenuBar::item
{
    color: #FFFFFF;
    background: transparent;
}

QMenuBar::item:selected
{
    background: #5285A6;
    /*border: 1px solid #5285A6;*/
}

QMenuBar::item:pressed
{
    background: #444;
    border: 1px solid #000;
    background-color: #5285A6;
    margin-bottom:-1px;
    padding-bottom:1px;
}
QMenu::item:selected
{
    color: #FFFFFF;
    background-color: #5285A6;
}
QMenu::item:hover
{
    color: #5285A6;
}
/*------------------------ComboBox----------------------------------------*/
QComboBox {
    border: 1px solid gray;
    border-radius: 3px;
    padding: 1px 18px 1px 3px;
    min-width: 6em;
}
QComboBox:hover
{
	background: #5285A6;
}

QComboBox:editable {
    background: #646464;
}
QComboBox:!editable {
     background: #444444;
}
/* QComboBox gets the &quot;on&quot; state when the popup is open */
QComboBox:!editable:on {
    background: #646464;
}
QComboBox:on { /* shift the text when the popup opens */
    padding-top: 3px;
    padding-left: 4px;
}
QComboBox::down-arrow {
    image: url(:/icons/dropArrow.png);
}
QComboBox::down-arrow:on { /* shift the arrow when popup is open */
    top: 1px;
    left: 1px;
}
/*Drop down*/
QComboBox::drop-down,
QComboBox::drop-down:hover,
QComboBox::drop-down:on {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 15px;
    border-left-style: solid;
    border-left-color: #646464;
    border-left-width: 1px;
}
QComboBox QAbstractItemView {
    selection-background-color: #5285A6;
	outline:none;
}
/*---------------------------------------------------------*/
QPushButton
{
    border: 1px solid gray;
    border-radius: 3px;
	min-width: 4em;
	min-height: 2em;
}
QPushButton:hover
{
    background-color: #646464;
}
QPushButton:pressed{
    
    background-color: #5285A6;
}
/*---------------------------------------------------------*/
/* Customize spin boxes. */

QSpinBox {
    background-color: #646464;
}

QSpinBox::up-button {
    image: url(:/icons/arrowUp.png);
    background-color: #444444;
}

QSpinBox::up-button:hover {
    border-image: url(:/images/spinup_hover.png) 1;
    background-color: #545454;
}

QSpinBox::up-button:pressed {
    border-image: url(:/images/spinup_pressed.png) 1;
    background-color: #646464;
}

QSpinBox::down-button {
    image: url(:/icons/arrowDown.png);
    background-color: #444444;
}

QSpinBox::down-button:hover {
    border-image: url(:/images/spindown_hover.png) 1;
    background-color: #545454;
}

QSpinBox::down-button:pressed {
    border-image: url(:/images/spindown_pressed.png) 1;
    background-color: #646464;
}
/*-------------------------------------------------------------*/
QDockWidget {
    border: 1px solid;
}

QDockWidget::title {
	color: #FFFFFF;
    text-align: left; /* align the text to the left */
    background: #444444;
    padding-left: 5px;
    padding-bottom: 5px;
}
QDockWidget::close-button, QDockWidget::float-button {
	color: #646464;
    border: 1px solid #646464;
    background: #444444;
}</string>
  </property>
  <widget class="QWidget" name="centralWidget">
   <layout class="QHBoxLayout" name="horizontalLayout">
    <item>
     <layout class="QVBoxLayout" name="ogl_layout"/>
    </item>
   </layout>
  </widget>
  <widget class="QMenuBar" name="menuBar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>691</width>
     <height>21</height>
    </rect>
   </property>
   <widget class="QMenu" name="menuFile">
    <property name="title">
     <string>File</string>
    </property>
    <addaction name="actionNew"/>
    <addaction name="actionOpen"/>
    <addaction name="separator"/>
    <addaction name="actionQuit"/>
   </widget>
   <addaction name="menuFile"/>
  </widget>
  <widget class="QToolBar" name="mainToolBar">
   <attribute name="toolBarArea">
    <enum>LeftToolBarArea</enum>
   </attribute>
   <attribute name="toolBarBreak">
    <bool>false</bool>
   </attribute>
  </widget>
  <widget class="QStatusBar" name="statusBar"/>
  <widget class="QToolBar" name="toolBar">
   <property name="windowTitle">
    <string>toolBar</string>
   </property>
   <attribute name="toolBarArea">
    <enum>TopToolBarArea</enum>
   </attribute>
   <attribute name="toolBarBreak">
    <bool>true</bool>
   </attribute>
  </widget>
  <widget class="QDockWidget" name="attr_editor">
   <property name="windowTitle">
    <string>Attribute Editor</string>
   </property>
   <attribute name="dockWidgetArea">
    <number>2</number>
   </attribute>
   <widget class="QWidget" name="dockWidgetContents">
    <layout class="QVBoxLayout" name="verticalLayout">
     <item>
      <spacer name="horizontalSpacer">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <property name="sizeType">
        <enum>QSizePolicy::MinimumExpanding</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>106</width>
         <height>20</height>
        </size>
       </property>
      </spacer>
     </item>
    </layout>
   </widget>
  </widget>
  <action name="actionNew">
   <property name="text">
    <string>New</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+N</string>
   </property>
  </action>
  <action name="actionOpen">
   <property name="text">
    <string>Open</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+O</string>
   </property>
  </action>
  <action name="actionQuit">
   <property name="text">
    <string>Quit</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+Q</string>
   </property>
  </action>
 </widget>
 <layoutdefault spacing="6" margin="11"/>
 <resources>
  <include location="MainWindow.qrc"/>
 </resources>
 <connections>
  <connection>
   <sender>actionQuit</sender>
   <signal>triggered()</signal>
   <receiver>MainWindowClass</receiver>
   <slot>close()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>345</x>
     <y>263</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
